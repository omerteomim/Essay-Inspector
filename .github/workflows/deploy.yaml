name: Deploy Lambda to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies and zip Lambda function
      run: |
        mkdir -p package
        cp lambda_function.py package/
        cd package
        zip -r ../lambda_function.zip .
        cd ..
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7
        terraform_wrapper: false
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Validate
      run: terraform validate
    
    - name: Terraform Plan
      run: |
        terraform plan \
          -var="api_key=${{ secrets.API_KEY }}" \
          -var="aws_region=${{ secrets.AWS_REGION }}" \
          -var="s3_bucket=${{ secrets.AWS_S3_BUCKET }}" 
          
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: |
        terraform apply -auto-approve \
          -var="api_key=${{ secrets.API_KEY }}" \
          -var="aws_region=${{ secrets.AWS_REGION }}" \
          -var="s3_bucket=${{ secrets.AWS_S3_BUCKET }}" 

    - name: Upload txt file to s3
      run: |
        aws s3 cp role.txt s3://${{ secrets.AWS_S3_BUCKET}}/role.txt --cache-control no-store
    
    - name: Apply Lambda function to html
      run: |
       # Get the URL from Terraform output
       URL=$(terraform output -raw function_url 2>&1 | \
            grep -oP 'https?://[^\s::]*' | \
            head -n 1 | \
            tr -d '\n')

       echo "Lambda URL is: $URL"
       # Replace the placeholder in index.html
       sed -i "s|__LAMBDA_URL__|$URL|g" index.html

    - name: Show modified fetch line
      run: grep "fetch(" index.html || echo "fetch line not found"

    - name: Upload index.html to S3
      run: |
        aws s3 cp index.html s3://${{ secrets.AWS_S3_BUCKET}}/index.html --cache-control no-store
        aws s3 cp write.png s3://${{ secrets.AWS_S3_BUCKET}}/write.png --cache-control no-store